CMAKE_MINIMUM_REQUIRED(VERSION 3.16)
PROJECT(libfluent CXX)

option(BUILD_SHARED_LIBS "Build shared library." OFF)

set(CMAKE_CXX_STANDARD 11)

find_package(msgpack CONFIG REQUIRED)
set(LINK_LIBRARIES msgpackc msgpackc-cxx)

find_package(Threads REQUIRED)

INCLUDE_DIRECTORIES(${INC_DIR} ./src)
LINK_DIRECTORIES(${LIB_DIR})

FILE(GLOB BASESRCS "src/*.cc" "src/*.hpp")
FILE(GLOB TESTSRCS "test/*.cc")
FILE(GLOB HEADERS "src/fluent/*.hpp")

ADD_LIBRARY(objlib OBJECT ${BASESRCS})
TARGET_LINK_LIBRARIES(objlib PUBLIC ${LINK_LIBRARIES})
SET_PROPERTY(TARGET objlib PROPERTY POSITION_INDEPENDENT_CODE ON)

ADD_LIBRARY(fluent $<TARGET_OBJECTS:objlib>)
TARGET_LINK_LIBRARIES(fluent PUBLIC ${LINK_LIBRARIES} Threads::Threads)
SET_TARGET_PROPERTIES(fluent PROPERTIES OUTPUT_NAME fluent)

ADD_EXECUTABLE(fluent-test ${TESTSRCS})
TARGET_LINK_LIBRARIES(fluent-test fluent)

ADD_EXECUTABLE(fluent-bench tools/fluent-bench.cc)
TARGET_LINK_LIBRARIES(fluent-bench fluent)

INSTALL(TARGETS fluent
        EXPORT fluentConfig
        INCLUDES DESTINATION include
        LIBRARY DESTINATION lib
        )
INSTALL(TARGETS fluent DESTINATION lib)
INSTALL(FILES src/fluent.hpp DESTINATION include/)
INSTALL(FILES ${HEADERS} DESTINATION include/fluent)
INSTALL(EXPORT fluentConfig DESTINATION cmake)
